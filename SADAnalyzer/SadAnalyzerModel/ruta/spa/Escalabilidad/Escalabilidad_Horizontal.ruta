TYPESYSTEM typesystems.ECoreTypeDescriptor;
DECLARE Token_Replicacion,Token_Hardware,Token_Replicar,Token_Agregar,Token_Nuevo,Token_Servidor;


Token{Token.lemma == "replicacion", REGEXP(Token.pos, "N(.?)")-> MARK(Token_Replicacion)};
Token{Token.lemma == "replicaci—n", REGEXP(Token.pos, "N(.?)")-> MARK(Token_Replicacion)};
Token{Token.lemma == "replicar", REGEXP(Token.pos, "V(..?)")-> MARK(Token_Replicar)};
Token{Token.lemma == "hardware", REGEXP(Token.pos, "N(.?)")-> MARK(Token_Hardware)};
Token{Token.lemma == "agregar", REGEXP(Token.pos, "V(..?)")-> MARK(Token_Agregar)};
Token{Token.lemma == "nuevo", REGEXP(Token.pos, "AQ")-> MARK(Token_Nuevo)};
Token{Token.lemma == "servidor", REGEXP(Token.pos, "N(.?)")-> MARK(Token_Servidor)};

Sentence{ -> CREATE(CrosscuttingConcern, "name" = "Escalabilidad_Horizontal", "kind" = "Tactics/Strategy", "sentence"=Sentence)} <- {

(Token_Agregar{NEAR(Token_Nuevo,0,7)}){NEAR(Token_Replicacion,0,10)};

Token_Replicacion{NEAR(Token_Hardware,0,10)};
Token_Replicar{NEAR(Token_Hardware,0,10)};



};