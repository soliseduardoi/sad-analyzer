TYPESYSTEM typesystems.ECoreTypeDescriptor;
DECLARE Token_Modificabilidad,Token_Mantenibilidad,Token_Sistema,Token_Flexible,Token_Modificacion,Token_Transpatente,Token_Codigo,Token_Debe,
Token_Capacidad,Token_Solucion,Token_Modulo;


Token{Token.lemma == "modificabilidad", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Modificabilidad)};
Token{Token.lemma == "mantenibilidad", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Mantenibilidad)};
Token{Token.lemma == "transparente", REGEXP(Token.pos, "AQ")-> MARK(Modificabilidad.Token_Transpatente)};
Token{Token.stem == "Deb", REGEXP(Token.pos, "V(..?)")-> MARK(Modificabilidad.Token_Debe)};
Token{Token.stem == "deb", REGEXP(Token.pos, "V(..?)")-> MARK(Modificabilidad.Token_Debe)};
Token{Token.stem == "sistem", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Sistema)};
Token{Token.stem == "flexibl", REGEXP(Token.pos, "AQ")-> MARK(Modificabilidad.Token_Flexible)};
Token{Token.stem == "modif", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Modificacion)};
Token{Token.stem == "codig", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Codigo)};
Token{Token.stem == "capac", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Capacidad)};
Token{Token.stem == "solucion", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Solucion)};
Token{Token.stem == "modul", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Modulo)};
Token{Token.stem == "Modul", REGEXP(Token.pos, "N(.?)")-> MARK(Modificabilidad.Token_Modulo)};

 Sentence{ -> CREATE(CrosscuttingConcern, "name" = "Modificabilidad","sentence"=Sentence)} <- {
    Modificabilidad.Token_Modificabilidad;
    Modificabilidad.Token_Mantenibilidad;
    Modificabilidad.Token_Sistema{NEAR(Modificabilidad.Token_Flexible,0,7)};
    Modificabilidad.Token_Modulo{NEAR(Modificabilidad.Token_Flexible,0,7)};
    Modificabilidad.Token_Modulo{NEAR(Modificabilidad.Token_Flexible,0,7)};
    Modificabilidad.Token_Modificacion{NEAR(Modificabilidad.Token_Transpatente,0,30)};
    (Modificabilidad.Token_Sistema{NEAR(Modificabilidad.Token_Capacidad,0,30)}) {NEAR(Modificabilidad.Token_Solucion,0,30)} ;
};
