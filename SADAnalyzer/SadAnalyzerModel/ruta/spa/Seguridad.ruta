TYPESYSTEM typesystems.ECoreTypeDescriptor;
DECLARE Token_Seguridad,Token_Permitir,Token_Transmitir,Token_Seguro,Token_Confidencial,Token_Dato,Token_Garantizar,Token_Informacion,Token_Integridad,
Token_Autenticidad,Token_Debe,Token_Sistema,Token_Transferencia,Token_Almacenamiento;


Token{Token.lemma == "seguridad", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Seguridad)};
Token{Token.stem == "permit", REGEXP(Token.pos, "V(..?)")-> MARK(Seguridad.Token_Permitir)};
Token{Token.lemma == "transmitir", REGEXP(Token.pos, "V(..?)")-> MARK(Seguridad.Token_Transmitir)};
Token{Token.stem == "segur", REGEXP(Token.pos, "AQ")-> MARK(Seguridad.Token_Seguro)};
Token{Token.stem == "confidencial", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Confidencial)};
Token{Token.stem == "dat", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Dato)};
Token{Token.lemma == "garantizar", REGEXP(Token.pos, "V(..?)")-> MARK(Seguridad.Token_Garantizar)};
Token{Token.stem == "informacion", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Informacion)};
Token{Token.stem == "inform", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Informacion)};
Token{Token.stem == "integr", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Integridad)};
Token{Token.stem == "autent", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Autenticidad)};
Token{Token.stem == "Deb", REGEXP(Token.pos, "V(..?)")-> MARK(Seguridad.Token_Debe)};
Token{Token.stem == "deb", REGEXP(Token.pos, "V(..?)")-> MARK(Seguridad.Token_Debe)};
Token{Token.stem == "sistem", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Sistema)};
Token{Token.lemma == "transferencia", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Transferencia)};
Token{Token.lemma == "almacenamiento", REGEXP(Token.pos, "N(.?)")-> MARK(Seguridad.Token_Almacenamiento)};


 Sentence{ -> CREATE(CrosscuttingConcern, "name" = "Seguridad","sentence"=Sentence)} <- {
    Seguridad.Token_Seguridad;
    Seguridad.Token_Confidencial{NEAR(Seguridad.Token_Dato,0,7)};
    (Seguridad.Token_Permitir{NEAR(Seguridad.Token_Transmitir,0,10)}) {NEAR(Seguridad.Token_Seguro,0,7)} ;
    ((Seguridad.Token_Informacion{NEAR(Seguridad.Token_Transmitir,0,15)}){NEAR(Seguridad.Token_Garantizar,0,15)}){NEAR(Seguridad.Token_Integridad,0,30)};
    ((Seguridad.Token_Informacion{NEAR(Seguridad.Token_Transmitir,0,15)}){NEAR(Seguridad.Token_Garantizar,0,15)}){NEAR(Seguridad.Token_Autenticidad,0,30)};
    ((Seguridad.Token_Sistema{NEAR(Seguridad.Token_Debe,0,7)}){NEAR(Seguridad.Token_Transferencia,0,30)}){NEAR(Seguridad.Token_Seguro,0,30)};
    ((Seguridad.Token_Sistema{NEAR(Seguridad.Token_Debe,0,7)}){NEAR(Seguridad.Token_Almacenamiento,0,30)}){NEAR(Seguridad.Token_Seguro,0,30)};
   
};